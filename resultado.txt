=== PRUEBA DEL PREPROCESSOR ===

Datos estandarizados:
       edad   salario categoria     ciudad
0 -1.414214 -1.384437         A     Madrid
1 -0.707107 -0.481543         B  Barcelona
2  0.000000 -0.180579         A     Madrid
3  0.707107  0.421350         C   Valencia
4  1.414214  1.625209         B  Barcelona

Datos normalizados:
   edad  salario categoria     ciudad
0  0.00      0.0         A     Madrid
1  0.25      0.3         B  Barcelona
2  0.50      0.4         A     Madrid
3  0.75      0.6         C   Valencia
4  1.00      1.0         B  Barcelona

Datos codificados:
   edad  salario categoria ciudad
0    25    30000         0      1
1    30    45000         1      0
2    35    50000         0      1
3    40    60000         2      2
4    45    80000         1      0

=== PRUEBA DEL MARKET BASKET ANALYSIS ===

Conjuntos frecuentes encontrados:
    support              itemsets
0     0.375              [azúcar]
1     0.750                [café]
2     0.375            [galletas]
3     0.375              [huevos]
4     0.625               [leche]
5     0.750                 [pan]
6     0.375        [azúcar, café]
7     0.250         [pan, azúcar]
8     0.250      [galletas, café]
9     0.500         [café, leche]
10    0.500           [pan, café]
11    0.250       [pan, galletas]
12    0.250       [huevos, leche]
13    0.375         [pan, huevos]
14    0.375          [pan, leche]
15    0.250   [pan, azúcar, café]
16    0.250    [pan, café, leche]
17    0.250  [pan, huevos, leche]

Reglas de asociación generadas:
        antecedents   consequents  ...  conviction  zhangs_metric
22     [pan, leche]      [huevos]  ...       1.875       0.700000
24         [huevos]  [pan, leche]  ...       1.875       0.700000
0          [azúcar]        [café]  ...         inf       0.400000
11         [huevos]         [pan]  ...         inf       0.400000
14    [pan, azúcar]        [café]  ...         inf       0.333333
23  [huevos, leche]         [pan]  ...         inf       0.333333
17         [azúcar]   [pan, café]  ...       1.500       0.400000
1            [café]      [azúcar]  ...       1.250       1.000000
10            [pan]      [huevos]  ...       1.250       1.000000
15      [pan, café]      [azúcar]  ...       1.250       0.500000
5           [leche]        [café]  ...       1.250       0.166667
4            [café]       [leche]  ...       1.125       0.250000
9          [huevos]       [leche]  ...       1.125       0.100000
21    [pan, huevos]       [leche]  ...       1.125       0.100000

[14 rows x 10 columns]

Top 5 reglas por lift:
/Users/david/Documents/Python_WS/ecomerce-lib/.venv/lib/python3.13/site-packages/mlxtend/frequent_patterns/fpcommon.py:110: DeprecationWarning: DataFrames with non-bool types result in worse computationalperformance and their support might be discontinued in the future.Please use a DataFrame with bool type
  warnings.warn(
      antecedents   consequents  ...  conviction  zhangs_metric
22   [pan, leche]      [huevos]  ...       1.875       0.700000
24       [huevos]  [pan, leche]  ...       1.875       0.700000
0        [azúcar]        [café]  ...         inf       0.400000
11       [huevos]         [pan]  ...         inf       0.400000
14  [pan, azúcar]        [café]  ...         inf       0.333333

[5 rows x 10 columns]

Recomendaciones para la canasta ['pan', 'leche']:
- huevos: 1.19
- café: 0.85

=== PRUEBA DEL PCA ANALYSIS ===

Varianza explicada por componente:
PC1: 0.982 (98.2%)
PC2: 0.014 (1.4%)
PC3: 0.004 (0.4%)

Importancia de características por componente:
                    PC1       PC2       PC3
altura         0.447727  0.446394  0.259182
peso           0.445092  0.566117 -0.547386
edad           0.449065 -0.031449  0.725687
ingreso        0.447177 -0.490353 -0.157693
gasto_mensual  0.446998 -0.488681 -0.285839

Datos transformados (primeros 3 componentes):
     PC1    PC2    PC3
0 -1.148  0.635 -0.063
1  0.831  0.038  0.074
2 -3.184 -0.310 -0.171
3  2.683 -0.080 -0.219
4 -2.177  0.005  0.124
5  0.174 -0.063 -0.016
6 -0.952 -0.168  0.178
7  3.775 -0.056  0.093

Número de componentes necesarios para explicar 95% de la varianza: 1

Datos para el gráfico de varianza explicada:
Varianza explicada por componente (%): [98.2  1.4  0.4]
Varianza explicada acumulada (%): [98.2 99.5 99.9]

=== PRUEBA DE CUSTOMER SEGMENTATION ===

Perfiles de segmentos:
                 edad  ingreso_anual  ...  Tamaño  Porcentaje
Segmento_1  38.428571   55285.714286  ...       7       46.67
Segmento_2  52.000000   85000.000000  ...       4       26.67
Segmento_3  27.750000   33750.000000  ...       4       26.67

[3 rows x 7 columns]

Métricas de evaluación:
Inercia: 11.79
Silhouette Score: 0.473
Calinski-Harabasz Score: 32.16

Características principales por segmento:

Segmento_1:
Tamaño: 7 clientes (46.7%)
Características distintivas:
- gasto_mensual: +0.10
- antiguedad_años: +0.07
- ingreso_anual: +0.04

Segmento_2:
Tamaño: 4 clientes (26.7%)
Características distintivas:
- antiguedad_años: +0.83
- gasto_mensual: +0.66
- frecuencia_compra: +0.50

Segmento_3:
Tamaño: 4 clientes (26.7%)
Características distintivas:
- antiguedad_años: +0.70
- gasto_mensual: +0.47
- frecuencia_compra: +0.45

Análisis de número óptimo de clusters:
Número de clusters -> Silhouette Score:
2 clusters: 0.548
3 clusters: 0.473
4 clusters: 0.540
5 clusters: 0.574
6 clusters: 0.506
7 clusters: 0.442
8 clusters: 0.377

Process finished with exit code 0
